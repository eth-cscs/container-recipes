include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'
  - local: '/QuantumESPRESSO/ci.yml'

# template for building images
# the following variables must be provided:
#  - DOCKERFILE : path/name of the dockerfile
#  - NAME_TAG : unique tag that will be used to store final image at the persistent location inside JFrog
.build-image:
  extends: .container-builder
  stage: build
  timeout: 2h
  # we create a tag that depends on the SHA value of input file, this way
  # a new base image is only built when the SHA of this file changes
  # If there are more dependency files that should change the tag-name of the base container
  # image, they can be added too.
  # Since the base image name is runtime dependent, we need to carry the value of it to
  # the following jobs via a dotenv file.
  before_script:
  - DOCKER_SHA_TAG=`sha256sum ${DOCKERFILE} | head -c 16`
  - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/apps/$NAME_TAG-$DOCKER_SHA_TAG
  - echo "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  variables:
    # change to 'always' if you want to rebuild, even if target tag exists already
    # (if-not-exists is the default, i.e. we could also skip the variable)
    CSCS_REBUILD_POLICY: if-not-exists

# template to run reframe tests
.run-reframe-test:
  extends: .container-runner-hohgant
  stage: run
  tags: ['hohgant-login-baremetal']
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo -e "$CSCS_REGISTRY_USER\n$CSCS_REGISTRY_PASSWORD" | sarus pull --login $BASE_IMAGE
    - rm -rf cscs-reframe-tests
    - git clone https://github.com/eth-cscs/cscs-reframe-tests.git
    - python3 -m venv venv_reframe
    - source venv_reframe/bin/activate
    - pip install reframe-hpc
    - export RFM_AUTODETECT_XTHOSTNAME=1
    - export RFM_REMOTE_DETECT=0
    - ${REFRAME_COMMAND}
    - deactivate
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit: report.xml

stages:
  - build
  - run
